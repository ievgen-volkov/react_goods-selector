{"version":3,"sources":["App.tsx","index.tsx"],"names":["goodsFromServer","App","state","goods","selectedGoods","updateGoods","good","setState","prevState","includes","filter","item","clearSelection","getSelectedItems","selectedItems","length","i","this","isSelected","listOfSelected","className","type","onClick","map","classNames","indexOf","React","Component","ReactDOM","render","document","getElementById"],"mappings":"qQAIMA,EAA4B,CAChC,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,UAQWC,EAAb,4MACEC,MAAQ,CACNC,MAAOH,EACPI,cAAe,CAAC,QAHpB,EAMEC,YAAc,SAACC,GACb,EAAKC,UAAS,SAACC,GACb,OAAOA,EAAUJ,cAAcK,SAASH,GACpC,CAAEF,cAAeI,EAAUJ,cAAcM,QAAO,SAAAC,GAAI,OAAIA,IAASL,MACjE,CAAEF,cAAc,GAAD,mBAAMI,EAAUJ,eAAhB,CAA+BE,SAVxD,EAcEM,eAAiB,WACf,EAAKL,SAAS,CAAEH,cAAe,MAfnC,EAkBES,iBAAmB,WACjB,IAAIC,EAAgB,GACZV,EAAkB,EAAKF,MAAvBE,cAER,OAAQA,EAAcW,QACpB,KAAK,EACHD,EAAgB,oBAChB,MAEF,KAAK,EACHA,EAAa,UAAMV,EAAc,GAApB,gBACb,MAEF,QACEU,GAAiBV,EAAc,GAC/B,IAAK,IAAIY,EAAI,EAAGA,EAAIZ,EAAcW,OAAS,EAAGC,GAAK,EACjDF,GAAa,YAASV,EAAcY,IAGtCF,GAAa,eAAYV,EAAcA,EAAcW,OAAS,GAAjD,iBAGjB,OAAOD,GAxCX,4CA2CE,WAAU,IAAD,OACP,EAAiCG,KAAKf,MAA9BC,EAAR,EAAQA,MAAOC,EAAf,EAAeA,cACTc,IAAed,EAAcW,OAC7BI,EAAiBF,KAAKJ,mBAE5B,OACE,qBAAKO,UAAU,MAAf,SACE,sBAAKA,UAAU,eAAf,UACE,sBAAKA,UAAU,cAAf,UACE,oBAAIA,UAAU,aAAd,SACGD,IAGFD,GACC,wBACEG,KAAK,SACLC,QAASL,KAAKL,eACdQ,UAAU,aAHZ,kBAUJ,oBAAIA,UAAU,YAAd,SAEIjB,EAAMoB,KAAI,SAACjB,GAAD,OACR,mCACE,qBAEEc,UAAWI,IAAW,YAAa,CACjC,sBAAuBpB,EAAcK,SAASH,KAHlD,UAOE,wBACEe,KAAK,SACLD,UAAU,cACVE,QAAS,kBACP,EAAKjB,YAAYC,IAJrB,SAOGF,EAAcK,SAASH,GAAQ,IAAM,MAEvCA,IAfIH,EAAMsB,QAAQnB,oBAxEvC,GAAyBoB,IAAMC,WAmGhB1B,ICtHf2B,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.903ccb5e.chunk.js","sourcesContent":["import React from 'react';\nimport classNames from 'classnames';\nimport './App.scss';\n\nconst goodsFromServer: string[] = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\ntype State = {\n  goods: string[],\n  selectedGoods: string[],\n};\n\nexport class App extends React.Component<{}, State> {\n  state = {\n    goods: goodsFromServer,\n    selectedGoods: ['Jam'],\n  };\n\n  updateGoods = (good: string) => {\n    this.setState((prevState: State) => {\n      return prevState.selectedGoods.includes(good)\n        ? { selectedGoods: prevState.selectedGoods.filter(item => item !== good) }\n        : { selectedGoods: [...prevState.selectedGoods, good] };\n    });\n  };\n\n  clearSelection = () => {\n    this.setState({ selectedGoods: [] });\n  };\n\n  getSelectedItems = () => {\n    let selectedItems = '';\n    const { selectedGoods } = this.state;\n\n    switch (selectedGoods.length) {\n      case 0:\n        selectedItems = 'No goods selected';\n        break;\n\n      case 1:\n        selectedItems = `${selectedGoods[0]} is selected`;\n        break;\n\n      default:\n        selectedItems += selectedGoods[0];\n        for (let i = 1; i < selectedGoods.length - 1; i += 1) {\n          selectedItems += `, ${selectedGoods[i]}`;\n        }\n\n        selectedItems += ` and ${selectedGoods[selectedGoods.length - 1]} are selected`;\n    }\n\n    return selectedItems;\n  };\n\n  render() {\n    const { goods, selectedGoods } = this.state;\n    const isSelected = !!selectedGoods.length;\n    const listOfSelected = this.getSelectedItems();\n\n    return (\n      <div className=\"App\">\n        <div className=\"App__content\">\n          <div className=\"App__titles\">\n            <h1 className=\"App__title\">\n              {listOfSelected}\n            </h1>\n\n            {isSelected && (\n              <button\n                type=\"button\"\n                onClick={this.clearSelection}\n                className=\"App__clear\"\n              >\n                x\n              </button>\n            )}\n          </div>\n\n          <ul className=\"App__list\">\n            {\n              goods.map((good) => (\n                <>\n                  <li\n                    key={goods.indexOf(good)}\n                    className={classNames('App__item', {\n                      'App__item--selected': selectedGoods.includes(good),\n                    })}\n                  >\n\n                    <button\n                      type=\"button\"\n                      className=\"App__button\"\n                      onClick={() => (\n                        this.updateGoods(good)\n                      )}\n                    >\n                      {selectedGoods.includes(good) ? '-' : '+'}\n                    </button>\n                    {good}\n                  </li>\n                </>\n              ))\n            }\n          </ul>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}